/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod model module.
   * @module model/TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod</code>.
   * @alias module:model/TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod} obj Optional instance to populate.
   * @return {module:model/TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod} The populated <code>TssV2TransactionsGet200ResponsePaymentInformationPaymentTypeMethod</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('operator')) {
        obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
      }
      if (data.hasOwnProperty('schemeName')) {
        obj['schemeName'] = ApiClient.convertToType(data['schemeName'], 'String');
      }
      if (data.hasOwnProperty('schemeOperator')) {
        obj['schemeOperator'] = ApiClient.convertToType(data['schemeOperator'], 'String');
      }
    }
    return obj;
  }

  /**
   * A Payment Type is enabled through a Method. Examples: Visa, Master Card, ApplePay, iDeal 
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * An operator of the Payment Type Method. Examples: Visa, PayPal, Google, Apple 
   * @member {String} operator
   */
  exports.prototype['operator'] = undefined;
  /**
   * A Payment Scheme is a formal, commercial relationship amongst payment ecosystem players (banks and merchants, typically, extended to include merchants payment service providers, banks processors, etc.), whereby the participants agree to an organizational, legal, and operational framework necessary for the functioning of the services these entities provide. Examples: Visa, Master Card, ApplePay, iDeal 
   * @member {String} schemeName
   */
  exports.prototype['schemeName'] = undefined;
  /**
   * Operator of the Scheme. Examples European Payment Council, Visa, Currence Ideal B.V 
   * @member {String} schemeOperator
   */
  exports.prototype['schemeOperator'] = undefined;



  return exports;
}));


